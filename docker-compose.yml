version: '3.8'

services:
  # Neo4j Graph Database for Agent Memory
  neo4j:
    image: neo4j:5.26-community
    container_name: sim-neo4j
    restart: unless-stopped
    ports:
      - "7474:7474"  # HTTP/Browser
      - "7687:7687"  # Bolt protocol
    environment:
      - NEO4J_AUTH=${NEO4J_AUTH}
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_memory_pagecache_size=${NEO4J_dbms_memory_pagecache_size}
      - NEO4J_dbms_memory_heap_initial__size=1G
      - NEO4J_dbms_memory_heap_max__size=${NEO4J_dbms_memory_heap_max__size}
      - NEO4J_dbms_default__database=${NEO4J_dbms_default__database}
      - NEO4J_server_metrics_enabled=true
      - NEO4J_server_metrics_prometheus_enabled=true
      - NEO4J_server_metrics_prometheus_port=2004
      - NEO4J_dbms_logs_query_enabled=true
      - NEO4J_dbms_logs_query_threshold=500ms
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
      - ./neo4j/conf:/conf
    networks:
      - sim-network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "simulation123", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Prometheus for Metrics Collection
  prometheus:
    image: prom/prometheus:latest
    container_name: sim-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - sim-network

  # Grafana for Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: sim-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_INSTALL_PLUGINS=neo4j-datasource,redis-datasource
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - sim-network
    depends_on:
      - prometheus
      - neo4j

  # Redis for Caching and Session Management
  redis:
    image: redis:7-alpine
    container_name: sim-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - sim-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Neo4j Exporter for Prometheus
  neo4j-exporter:
    image: fhofherr/neo4j-prometheus-exporter:latest
    container_name: sim-neo4j-exporter
    restart: unless-stopped
    ports:
      - "9187:9187"
    environment:
      - NEO4J_URL=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=simulation123
    networks:
      - sim-network
    depends_on:
      - neo4j

  # Optional: Jupyter Notebook for Analysis
  jupyter:
    image: jupyter/datascience-notebook:latest
    container_name: sim-jupyter
    restart: unless-stopped
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=${JUPYTER_TOKEN}
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./data:/home/jovyan/data
      - ./logs:/home/jovyan/logs
    networks:
      - sim-network
    depends_on:
      - neo4j

  # Optional: Node Exporter for System Metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: sim-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - sim-network

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local
  grafana_data:
    driver: local
  prometheus_data:
    driver: local
  redis_data:
    driver: local

networks:
  sim-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16